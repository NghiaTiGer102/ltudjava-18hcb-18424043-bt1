/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.FileDialog;
import java.awt.Frame;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication1.Entities.MonHoc;
import javaapplication1.Entities.SinhVien;
import javaapplication1.Extension.TxtFileNameFilter;

/**
 *
 * @author Asus
 */
public class FormThoiKhoaBieu extends javax.swing.JFrame {

    /**
     * Creates new form FormThoiKhoaBieu
     */
    public FormThoiKhoaBieu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImportCSV = new javax.swing.JButton();
        cmbLopHoc = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnImportCSV.setText("Inport CSV");
        btnImportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(cmbLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(btnImportCSV)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportCSV)
                    .addComponent(cmbLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportCSVActionPerformed
        // TODO add your handling code here:
        FileDialog dialog = new FileDialog((Frame)null, "Select File to Open");        
         dialog.setFile("*.CSV");

        dialog.setMode(FileDialog.LOAD);
        dialog.setVisible(true);
        String file = dialog.getFile();
        System.out.println(file + " chosen.");
         System.out.println(dialog.getDirectory() + " chosen.");

         String fileCSV = dialog.getDirectory()+file;
     

     
      List<MonHoc> listMonHoc = new ArrayList<MonHoc>();
        Path pathToFile = Paths.get(fileCSV);
        String tenKhoaBieu="";
        // create an instance of BufferedReader
        // using try with resource, Java 7 feature to close resources
        
        try (BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.UTF_8)) 
        {

            // read the first line from the text file
            String line = br.readLine();                                         
            while (line != null) 
            {
                
                if(tenKhoaBieu  == "")
                {
                String[] attributes = line.split("\\,");
                tenKhoaBieu = attributes[0];
                 line = br.readLine();
                 continue;
                }
                
                // use string.split to load a string array with the values from
                // each line of
                // the file, using a comma as the delimiter
                String[] attributes = line.split(",");
                MonHoc monhoc = new MonHoc();
                 monhoc = monhoc.ThemMonHoc(attributes);

                // adding book into ArrayList
                listMonHoc.add(monhoc);

                // read next line before looping
                // if end of file reached, line would be null
                line = br.readLine();
            }
            
            
            // loop until all lines are read
            
            br.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            
        }
        
         try {
      File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachThoiKhoaBieu\\" +  cmbLopHoc.getSelectedItem().toString()+".txt";
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
     String khoaBieuLop = cmbLopHoc.getSelectedItem().toString() +"|"+ tenKhoaBieu+"\n";
      fw.write(khoaBieuLop);
    listMonHoc.forEach((element) -> {
        String dulieumonhoc = element.getMaMonHoc()+"|"+element.getTenMonHoc()+"|"+element.getPhongHoc()+"\n";
          try {
              fw.write(dulieumonhoc);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
     
    }
         
         
         
         
       // Ghi danh sách sinh viên vào lớp hcọ
       
       List<SinhVien> listSinhVien = new  ArrayList<SinhVien>();
       SinhVien sv = new SinhVien();
       listSinhVien = sv.getAllSinhVien(cmbLopHoc.getSelectedItem().toString());
       
       
        try {
      File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachLopHocMopHoc\\" + cmbLopHoc.getSelectedItem().toString()+"-"+tenKhoaBieu+".txt";
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
     
    listSinhVien.forEach((element) -> {
        String dulieusinhvien = element.getmSSV()+"|"+element.getHoTen()+"|"+element.getGioiTinh()+"|"+element.getcMND()+"\n";
          try {
              fw.write(dulieusinhvien);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
 }
         
        
         
        
    }//GEN-LAST:event_btnImportCSVActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        HienThiDanhSachLopLenCombobox();
    }//GEN-LAST:event_formWindowOpened

    
    
     void  HienThiDanhSachLopLenCombobox()
    {
        
         File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\Dulieu\\DanhSachSinhVien";
        File dir = new File(currentDirectory);
 
        File[] txtFiles = dir.listFiles(new TxtFileNameFilter());
 
        for (File txtFile : txtFiles) {
             File f = new File(txtFile.getAbsolutePath());
             
            cmbLopHoc.addItem(f.getName().toString().replace(".txt", ""));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormThoiKhoaBieu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImportCSV;
    private javax.swing.JComboBox<String> cmbLopHoc;
    // End of variables declaration//GEN-END:variables
}
